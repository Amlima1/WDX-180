{
  "$schema": "./resources.schema.json",
  "resources": {
    "how-computers-work-binary-data": {
      "title": "How Computers Work: Binary & Data",
      "creator": [
        "code.org"
      ],
      "subject": "",
      "description": "You'll hear that everything's \"1s and 0s\" in a computer, but what does that mean? Find out how computers represent numbers, words, images, and sound.",
      "publisher": "code.org",
      "date": "30/01/2018",
      "type": "YouTube",
      "youtube": {
        "id": "USCBCmwMCDA"
      },
      "identifier": "https://www.youtube.com/watch?v=USCBCmwMCDA",
      "language": [
        "en"
      ],
      "rights": "Standard YouTube License",
      "terms": [
        "Bit",
        "Binary",
        "Pixel",
        "RGB",
        "Waveform"
      ],
      "duration": 360,
      "concepts": [
        "Representing text, images and sound with zeroes and ones (bits).",
        "Bits are how computer input, store, process and output information"
      ]
    },
    "images-pixels-and-rgb": {
      "title": "Images, Pixels and RGB",
      "type": "YouTube",
      "youtube": {
        "id": "15aqFQQVBWU",
        "thumbnail_url": "https://i.ytimg.com/vi/USCBCmwMCDA/maxresdefault.jpg"
      },
      "identifier": "https://www.youtube.com/watch?v=15aqFQQVBWU",
      "duration": 360,
      "terms": [
        "Resolution",
        "Density",
        "RGB",
        "Pixel",
        "JPEG",
        "GIF",
        "PNG",
        "Bit",
        "Binary",
        "Byte",
        "Function"
      ],
      "concepts": [
        "With 8 bits we can store 256 numbers from 0 up to 255."
      ]
    },
    "digital-compression-explained-by-aloe-blacc": {
      "title": "",
      "type": "YouTube",
      "youtube": {
        "id": "MijmeoH9LT4"
      },
      "terms": [
        "Lossy",
        "Lossless",
        "Compression"
      ],
      "concepts": [
        "compression",
        "algorithm"
      ]
    },
    "characters-symbols-and-the-unicode-miracle-computerphile": {
      "title": "Characters, Symbols and the Unicode Miracle - Computerphile",
      "type": "YouTube",
      "youtube": {
        "id": "MijmeoH9LT4"
      },
      "identifier": "https://www.youtube.com/watch?v=MijmeoH9LT4",
      "duration": 600,
      "terms": [
        "ASCII",
        "Binary",
        "Hexadecimal",
        "Encoding"
      ],
      "concepts": [
        [
          "What is ASCII",
          "A way to represent characters of the english alphabet using binary digits"
        ],
        [
          "What is the standard text encoding for the Web",
          "UTF-8"
        ]
      ]
    },
    "tutorial-1-about-bits-bytes": {
      "title": "Tutorial 1 About Bits & Bytes",
      "type": "YouTube",
      "youtube": {
        "id": "H2kTzmJJ79E"
      },
      "identifier": "https://www.youtube.com/watch?v=H2kTzmJJ79E",
      "duration": 300,
      "terms": [
        "Kilobyte",
        "Kibibyte",
        "SI",
        "IEC"
      ],
      "concepts": [
        "How storage space is calculated in computers"
      ]
    },
    "the-internet-encryption-public-keys": {
      "title": "The Internet: Encryption & Public Keys",
      "type": "YouTube",
      "youtube": {
        "id": "ZghMPWGXexs"
      },
      "identifier": "https://www.youtube.com/watch?v=ZghMPWGXexs",
      "duration": 420,
      "captions": true,
      "terms": [
        "Public Key",
        "Caesar Cipher"
      ],
      "reviewers": [
        {
          "name": "Shariar Shakhawat",
          "github": "https://github.com/Sha-Shak"
        }
      ]
    },
    "why-do-computers-understand-only-0-1-logic": {
      "title": "Why do computers understand only 0 & 1 logic?",
      "identifier": "https://www.quora.com/Why-do-computers-understand-only-0-1-logic/answers/92646682",
      "type": "Quora"
    },
    "how-computers-calculate-the-alu-crash-course-computer-science-5": {
      "title": "How Computers Calculate - the ALU: Crash Course Computer Science #5",
      "type": "YouTube",
      "youtube": {
        "id": "1I5ZMmrOfnA",
        "playlist_id": "PL8dPuuaLjXtNlUrzyH5r6jN9ulIgZBpdo",
        "playlist_index": 7,
        "playlist_title": "Computer Science"
      },
      "terms": [
        "ALU",
        "Logic Gates",
        "Half Adder",
        "Full Adder",
        "Overflow",
        "XOR",
        "NOT",
        "AND",
        "Logic Unit"
      ]
    },
    "representing-numbers-and-letters-with-binary-crash-course-computer-science-4": {
      "title": "Representing Numbers and Letters with Binary: Crash Course Computer Science #4",
      "type": "YouTube",
      "duration": 660,
      "identifier": "https://www.youtube.com/watch?v=1GSjbWt0c9M",
      "youtube": {
        "captions": [
          "EN"
        ],
        "id": "1GSjbWt0c9M",
        "playlist_id": "PL8dPuuaLjXtNlUrzyH5r6jN9ulIgZBpdo",
        "playlist_index": 5
      },
      "level": "Beginner",
      "terms": [
        "IEEE",
        "IEEE 754",
        "ASCII",
        "Interoperability"
      ],
      "concepts": [
        "How do computers deal with large numbers?",
        "How do computers deal with negative numbers?",
        "How do computers deal with floating point numbers?"
      ]
    },
    "how-shazam-i-ds-over-23-000-songs-each-minute-wsj-tech-behind": {
      "title": "How Shazam IDs Over 23,000 Songs Each Minute | WSJ Tech Behind",
      "type": "YouTube",
      "duration": 420,
      "youtube": {
        "id": "b6xeOLjeKs0"
      },
      "terms": [
        "Audio Fingerprinting"
      ]
    },
    "how-spotify-s-ai-driven-recommendations-work-wsj-tech-behind": {
      "title": "How Spotifyâ€™s AI-Driven Recommendations Work | WSJ Tech Behind",
      "type": "YouTube",
      "duration": 420,
      "identifier": "https://www.youtube.com/watch?v=pGntmcy_HX8",
      "youtube": {
        "id": "pGntmcy_HX8"
      }
    },
    "why-tap-to-pay-is-safer-than-a-credit-card-swipe-wsj-tech-behind": {
      "title": "Why Tap-to-Pay Is Safer Than a Credit Card Swipe | WSJ Tech Behind",
      "type": "YouTube",
      "identifier": "https://www.youtube.com/watch?v=S7dWigI7Soc",
      "youtube": {
        "id": "S7dWigI7Soc"
      },
      "terms": [
        "RFID",
        "NFC"
      ]
    },
    "5-how-does-the-internet-work": {
      "title": "#5 How does the Internet work?",
      "type": "Podcast",
      "transcripts": [],
      "download": "https://pdcn.co/e/pinecast.com/listen/5a9a3bbb-4411-493a-9fe3-30336c4abf3c.mp3?source=direct&download&ext=asset.mp3",
      "publisher": "http://kopec.live"
    },
    "6-how-does-the-web-work": {
      "title": "#6 How does the Web work? Kopec Explains Software",
      "type": "Podcast",
      "description": "What are the technologies that underly the Web? We discuss Web Browsers and Web Servers. We touch on: the protocols they use to communicate (HTTP and HTTPS), the languages they use to render web pages (HTML, CSS, JavaScript), and server-side technologies like databases and server-side programming languages.",
      "transcripts": [],
      "publisher": "http://kopec.live",
      "download": "https://pdcn.co/e/pinecast.com/listen/faffaffb-63e3-4c2c-a0fb-72c11fed390c.mp3?source=direct&download&ext=asset.mp3",
      "duration": 1320,
      "identifier": "http://kopec.live/episode/faffaffb63e34c2c/how-does-the-web-work-"
    },
    "21-how-have-u-is-evolved": {
      "title": "#21 How have UIs Evolved? Kopec Explains Software",
      "type": "Podcast",
      "duration": 1440,
      "publisher": "http://kopec.live",
      "transcripts": [],
      "download": "https://pdcn.co/e/pinecast.com/listen/39fd2797-9959-4649-987e-e61dff48ccc8.mp3?source=direct&download&ext=asset.mp3",
      "identifier": "http://kopec.live/episode/39fd279799594649/how-have-uis-evolved-",
      "description": "Through the history of computing, user interfaces (UIs) have evolved from punch cards to voice interaction. In this episode we track that evolution, discussing each paradigm and the machine that popularized it. We primarily focus on personal computer UIs, covering command-line interfaces (CLIs), graphical user interfaces (GUIs), touch-screen interaction, and voice interfaces. We also imagine the future, including neural interfaces, virtual reality, and augmented reality. This episode is an introductory guide to the interfaces available and a short history, not a comprehensive tour."
    },
    "silicon-semiconductors-solar-cells-crash-course-engineering-22": {
      "title": "Silicon, Semiconductors, & Solar Cells: Crash Course Engineering #22",
      "type": "YouTube",
      "identifier": "",
      "youtube": {
        "id": "ivWXuOd5SrI",
        "playlist_id": "PL8dPuuaLjXtO4A_tL6DLZRotxEb114cMR",
        "playlist_index": 25,
        "playlist_title": "Engineering"
      },
      "concepts": [
        "SINCE TRANSISTORS USE SMALLER CURRENTS TO INFLUENCE THE ON OR OFF STATES OF THE LARGER CURRENTS FLOWING THROUGH THE WIRE, THEY FORM THE BASIS OF THE BINARY SYSTEM OF ONES AND ZEROES THAT COMPUTERS RELY ON."
      ],
      "reviewers": [
        {
          "github": "kostasx",
          "rating": 0.4
        }
      ]
    },
    "electrical-power-conductors-your-dream-home-crash-course-engineering-21": {
      "title": "Electrical Power, Conductors, & Your Dream Home: Crash Course Engineering #21",
      "type": "YouTube",
      "identifier": "https://www.youtube.com/watch?v=uTWHMchUlws",
      "youtube": {
        "id": "uTWHMchUlws",
        "playlist_id": "PL8dPuuaLjXtO4A_tL6DLZRotxEb114cMR",
        "playlist_index": 24,
        "playlist_title": "Engineering"
      },
      "reviewers": [
        {
          "github": "kostasx",
          "rating": 0.6
        }
      ]
    },
    "77-what-is-a-memory-leak": {
      "title": "#77 What is a Memory Leak?",
      "description": "Memory leaks occur when a program allocates memory and fails to free it when the memory is no longer being used. They can cause the memory use of a program to balloon over time, eventually leading to performance problems or a crash. They are a common programmer error, that has been alleviated, although not eliminated, by modern programming languages. Programming languages like C and C++ use manual memory management, which requires the programmer to do some book-keeping. The programmer must keep track of all of the memory they allocated and must remember to free it. Programming languages with garbage collectors automatically free unused memory. In this episode we explain memory leaks and look at a recent case of a major memory leak in macOS Monterey as an example.",
      "identifier": "http://kopec.live/episode/3aa2ed3f/what-is-a-memory-leak-",
      "type": "Podcast",
      "transcripts": [],
      "download": "https://pdcn.co/e/pinecast.com/listen/3aa2ed3f-6078-49cf-83a0-c70dfd4ff128.mp3?source=direct&download&ext=asset.mp3",
      "publisher": "http://kopec.live",
      "terms": [
        "Garbage Collection",
        "Memory Leak",
        "Memory Protection"
      ]
    },
    "7-what-is-a-character-encoding": {
      "type": "Podcast",
      "transcripts": [],
      "title": "#7 What is a Character Encoding?",
      "download": "https://pdcn.co/e/pinecast.com/listen/d8ae81cf-7d31-4abe-baf6-0da95eecdcfe.mp3?source=direct&download&ext=asset.mp3",
      "publisher": "http://kopec.live",
      "reviewers": [
        {
          "github": "kostasx",
          "rating": 1
        }
      ]
    },
    "how-the-internet-works-in-5-minutes": {
      "title": "How the Internet Works in 5 Minutes",
      "type": "YouTube",
      "duration": 288,
      "partials": [
        {
          "$comment": "Shortened version",
          "label": "How the Internet Works",
          "youtube_embed": "https://www.youtube.com/embed/7_LPdttKXPc?start=29&end=272"
        },
        {
          "label": "Internet Packets",
          "youtube_embed": "https://www.youtube.com/embed/7_LPdttKXPc?start=161&end=176"
        }
      ],
      "identifier": "https://www.youtube.com/watch?v=7_LPdttKXPc",
      "youtube": {
        "id": "7_LPdttKXPc"
      }
    },
    "java-script-tutorial-for-beginners-quick-start": {
      "title": "JavaScript Tutorial for Beginners: Quick Start",
      "type": "YouTube",
      "level": "Beginner",
      "identifier": "https://www.youtube.com/watch?v=SajRjc9KKUE",
      "concepts": [
        "How to open Chrome Dev Tools",
        "How to put Chrome Dev Tools into dark mode",
        "How to use the console tab in Chrome Dev Tools to enter JavaScript statements",
        "Four data types: 1) String 2) Number 3) Boolean 4) Undefined",
        "How to check data types with the keyword typeof",
        "How to create variable with the keyword let",
        "How to name variables with camelCase",
        "How to use basic mathematical operators to perform mathematic operations, to concatenate string data, and to compare data types",
        "When we compared data, we received Boolean data in return"
      ],
      "youtube": {
        "id": "SajRjc9KKUE",
        "playlist_id": "PL0Zuz27SZ-6Oi6xNtL_fwCrwpuqylMsgT",
        "playlist_title": "Javascript Tutorials for Beginners"
      }
    },
    "where-do-i-put-my-java-script-how-to-link-javascript-to-html": {
      "title": "Where do I put my JavaScript? How to link Javascript to HTML",
      "type": "YouTube",
      "identifier": "https://www.youtube.com/watch?v=JMy6z1GricM",
      "youtube": {
        "id": "JMy6z1GricM"
      },
      "concepts": [
        "(00:00) Intro",
        "(0:15) Setting up your DEV environment",
        "(0:20) Where to find and install Visual Studio Code",
        "(0:50) Create a directory (aka folder) for your files",
        "(1:28) Opening a folder in VS Code",
        "(1:45) Create an HTML document in VS Code",
        "(1:55) Emmett abbreviation to quickly code basic HTML",
        "(2:07) Add semantic elements to your HTML code",
        "(2:23) Save your HTML document in VS Code (Ctrl+S)",
        "(2:38) The style element for adding CSS to your HTML",
        "(3:00) Creating a new folder from within VS Code",
        "(3:05) Creating a CSS file",
        "(3:15) Adding styles to your CSS file",
        "(3:38) Linking to a CSS file from your HTML document",
        "(4:00) Where to put your JavaScript: script tags",
        "(4:05) How to link your JavaScript file to your HTML file: src attribute",
        "(4:20) Or put your JavaScript inside of the script element",
        "(4:30) How to print to the Chrome Dev Tools console window from your JS file",
        "(4:50) How to open up Chrome Dev Tools to see the console window",
        "(5:25) How to open your HTML file in Chrome",
        "(5:40) Creating a folder for your JavaScript file",
        "(5:50) Creating a Javascript file",
        "(6:20) Linking to your JavaScript file",
        "(7:00) Adding more JavaScript code to your file"
      ]
    },
    "java-script-string-methods-and-properties-java-script-tutorial-for-beginners": {
      "title": "JavaScript String Methods and Properties | JavaScript Tutorial for Beginners",
      "type": "YouTube",
      "youtube": {
        "id": "LiuzigJldNo"
      },
      "related_urls": [
        {
          "label": "String (MDN)",
          "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String"
        },
        {
          "label": "Useful string methods (MDN)",
          "url": "https://developer.mozilla.org/en-US/docs/Learn/JavaScript/First_steps/Useful_string_methods"
        }
      ],
      "concepts": [
        "(00:00) Intro",
        "(0:12) Dev Environment",
        "(0:43) VS Code Live Server Extension",
        "(1:48) Starting with a string variable",
        "(2:08) The string length property",
        "(2:10) Dot notation",
        "(2:55) String Methods",
        "(3:00) charAt() method",
        "(3:30) indexOf() method",
        "(4:13) lastIndexOf() method",
        "(4:30) slice() method",
        "(5:18) toUpperCase method",
        "(5:30) toLowerCase method",
        "(5:35) includes() method",
        "(5:53) split() method",
        "(6:47) Where to find more string methods"
      ],
      "identifier": "https://www.youtube.com/watch?v=LiuzigJldNo"
    },
    "javascript-numbers-number-methods-isnan-javascript-tutorial-for-beginners": {
      "type": "YouTube",
      "duration": 362,
      "title": "JavaScript Numbers, Number Methods, isNaN | JavaScript Tutorial for Beginners",
      "date": "29/07/2020",
      "youtube": {
        "id": "3Ul9gYweEPs",
        "channel_id": "UCY38RvRIxYODO4penyxUwTg",
        "channel_title": "Dave Gray",
        "thumbnail_url": "https://i.ytimg.com/vi/3Ul9gYweEPs/sddefault.jpg"
      },
      "tags": [
        "javascript tutorial",
        "beginners javascript",
        "javascript methods",
        "javascript",
        "tutorial",
        "beginners",
        "javascript numbers",
        "isNaN"
      ],
      "language": [
        "en"
      ]
    },
    "math-methods-and-how-to-generate-a-random-number-with-javascript-javascript-tutorial-for-beginners": {
      "type": "YouTube",
      "duration": 324,
      "title": "Math Methods and How to Generate a Random Number with JavaScript | JavaScript Tutorial for Beginners",
      "date": "04/08/2020",
      "youtube": {
        "id": "vzLdq3b0w3Y",
        "channel_id": "UCY38RvRIxYODO4penyxUwTg",
        "channel_title": "Dave Gray",
        "thumbnail_url": "https://i.ytimg.com/vi/vzLdq3b0w3Y/sddefault.jpg"
      },
      "tags": [
        "javascript math random",
        "javascript math",
        "javascript random",
        "javascript",
        "javascript tutorial for beginners",
        "beginners javascript tutorial"
      ],
      "language": [
        "en"
      ]
    },
    "problem-solving-with-code-your-first-coding-challenge-javascript-tutorial-for-beginners": {
      "type": "YouTube",
      "duration": 453,
      "title": "Problem Solving with Code | Your First Coding Challenge | JavaScript Tutorial for Beginners",
      "date": "07/08/2020",
      "youtube": {
        "id": "gLt1KJPmjXA",
        "channel_id": "UCY38RvRIxYODO4penyxUwTg",
        "channel_title": "Dave Gray",
        "thumbnail_url": "https://i.ytimg.com/vi/gLt1KJPmjXA/sddefault.jpg"
      },
      "concepts": [
        "(00:00) Intro",
        "(0:20) Define the overall problem",
        "(0:34) Break the large problem into smaller problems",
        "(0:45) Solving the first small problem",
        "(1:30) Solving the second small problem",
        "(2:30) Bring the solutions together to solve the large problem",
        "(3:25) Finding a bug in our solution!",
        "(4:25) Fixing the bug in the solution",
        "(4:50) The solution to the problem works!",
        "(4:55) Level up the solution to make it work for any name",
        "(6:45) Now our solution works for any name!"
      ],
      "tags": [
        "javascript",
        "problem solving",
        "code challenge",
        "javascript tutorial for beginners",
        "beginners javascript",
        "beginners javascript tutorial",
        "problem solving with code",
        "coding challenge"
      ],
      "language": [
        "en"
      ]
    },
    "if-statements-in-javascript-tutorial-for-beginners": {
      "type": "YouTube",
      "duration": 394,
      "title": "If Statements in Javascript | Tutorial for Beginners",
      "date": "14/08/2020",
      "youtube": {
        "id": "9Ykz2_PhdfE",
        "channel_id": "UCY38RvRIxYODO4penyxUwTg",
        "channel_title": "Dave Gray",
        "thumbnail_url": "https://i.ytimg.com/vi/9Ykz2_PhdfE/sddefault.jpg"
      },
      "concepts": [
        "(00:00) Intro",
        "(0:11) If Statements are Conditionals",
        "(0:19) Basic Syntax",
        "(0:35) Else clauses",
        "(0:45) Example If Statement #1",
        "(2:15) Else If clauses",
        "(2:30) Consider the Logical Order",
        "(2:55) Checking for Two Conditions at Once",
        "(3:25) Example If Statement #2",
        "(3:55) \"Waterfall\" Logical Order",
        "(4:45) Nested If Statements",
        "(5:10) Decision Tree Thinking: Rock - Paper - Scissors"
      ],
      "tags": [
        "if statements in javascript",
        "if statements",
        "if then statements",
        "if else statements",
        "javascript",
        "javascript tutorial for beginners",
        "beginners tutorial"
      ],
      "language": [
        "en"
      ]
    },
    "switch-statements-in-javascript-tutorial-for-beginners": {
      "type": "YouTube",
      "duration": 238,
      "title": "Switch Statements in Javascript | Tutorial for Beginners",
      "date": "18/08/2020",
      "youtube": {
        "id": "3q7sk03ehOs",
        "channel_id": "UCY38RvRIxYODO4penyxUwTg",
        "channel_title": "Dave Gray",
        "thumbnail_url": "https://i.ytimg.com/vi/3q7sk03ehOs/sddefault.jpg"
      },
      "concepts": [
        "(00:00) Intro",
        "(0:13) Switch Statements are Conditionals",
        "(0:17) Basic Syntax",
        "(0:20) Value or Expression followed by Case evaluation",
        "(0:28) Logical Order is important",
        "(0:33) Use break keyword",
        "(0:38) Default option",
        "(0:50) Example #1",
        "(1:20) Switch statements use strict equality matches",
        "(1:32) Example #2: Evaluate numbers",
        "(2:12) Example #3: Rock - Paper - Scissors Decision Tree"
      ],
      "tags": [
        "switch statements",
        "switch statements in javascript",
        "javascript switch statements",
        "javascript tutorial for beginners",
        "beginners javascript",
        "beginners tutorial"
      ],
      "language": [
        "en"
      ]
    },
    "ternary-operator-in-javascript-tutorial-for-beginners": {
      "type": "YouTube",
      "duration": 328,
      "title": "Ternary Operator in Javascript | Tutorial for Beginners",
      "date": "25/08/2020",
      "youtube": {
        "id": "ib8MHSMwtYg",
        "channel_id": "UCY38RvRIxYODO4penyxUwTg",
        "channel_title": "Dave Gray",
        "thumbnail_url": "https://i.ytimg.com/vi/ib8MHSMwtYg/sddefault.jpg"
      },
      "concepts": [
        "(00:00) Intro",
        "(0:13) What is a Ternary Operator?",
        "(0:18) Ternary Operator Statement Syntax",
        "(0:48) Example Ternary Statement",
        "(1:50) Example of Chaining Ternary Operator Statements",
        "(3:05) A Grading Scale Example with Chained Ternary Statements",
        "(4:10) Rock - Paper - Scissors with Ternary Operator Statements"
      ],
      "tags": [
        "ternary operator",
        "ternary operator javascript",
        "ternary operator js",
        "ternary operators",
        "ternary operator for beginners",
        "ternary operator tutorial",
        "javascript"
      ],
      "language": [
        "en"
      ]
    },
    "user-input-in-javascript-tutorial-for-beginners": {
      "type": "YouTube",
      "duration": 629,
      "title": "User Input in Javascript | Tutorial for Beginners",
      "date": "27/08/2020",
      "youtube": {
        "id": "94UM0Ss3uoU",
        "channel_id": "UCY38RvRIxYODO4penyxUwTg",
        "channel_title": "Dave Gray",
        "thumbnail_url": "https://i.ytimg.com/vi/94UM0Ss3uoU/sddefault.jpg"
      },
      "concepts": [
        "(00:00) Intro",
        "(0:15) Dev Environment",
        "(0:45) alert notifications",
        "(1:45) confirm notifications with boolean data",
        "(2:35) Receiving data input from the user ",
        "(3:10) prompt notifications with string data",
        "(4:05) Possible null values returned",
        "(4:43) Nullish Coalescing Operator",
        "(6:10) How to check for an empty string",
        "(7:15) An easy mistake to make!",
        "(7:20) How to check data before accessing properties and methods",
        "(8:50) Eliminating extra white space from user input"
      ],
      "tags": [
        "user input",
        "javascript",
        "javascript user input",
        "null values in javascript",
        "null values",
        "javascript alert",
        "javascript confirm",
        "javascript prompt",
        "nullish coalescing",
        "javascript nullish coalescing"
      ],
      "language": [
        "en"
      ]
    },
    "for-loops-while-loops-do-while-loops-javascript-loop-tutorial-for-beginners": {
      "type": "YouTube",
      "duration": 980,
      "title": "For Loops, While Loops, Do While Loops | Javascript Loop Tutorial for Beginners",
      "date": "31/08/2020",
      "youtube": {
        "id": "zO5-OnRA5lA",
        "channel_id": "UCY38RvRIxYODO4penyxUwTg",
        "channel_title": "Dave Gray",
        "thumbnail_url": "https://i.ytimg.com/vi/zO5-OnRA5lA/sddefault.jpg"
      },
      "concepts": [
        "(00:00) Intro",
        "(0:13) While Loops",
        "(3:28) Do not create an endless loop (but don't feel bad if you do..it happens)",
        "(4:33) Do While Loops",
        "(5:07) The difference of a Do While Loop",
        "(6:35) For Loops",
        "(6:52) Initialize the counter variable",
        "(7:10) Conditional statement",
        "(7:18) Increment the counter",
        "(9:15) Using the length property of a variable in a for loop",
        "(9:45) While (true)",
        "(12:20) Break Statements",
        "(14:15) Continue Statements"
      ],
      "tags": [
        "javascript loop tutorial",
        "javascript loops",
        "loop tutorial for beginners",
        "for loops",
        "while loops",
        "do while loops",
        "loops in javascript",
        "loop tutorial for javascript"
      ],
      "language": [
        "en"
      ]
    }
  },
  "creators": {}
}