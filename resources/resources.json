{
  "$schema": "./resources.schema.json",
  "resources": {
    "how-computers-work-binary-data": {
      "title": "How Computers Work: Binary & Data",
      "creator": ["code.org"],
      "subject": "",
      "description": "You'll hear that everything's \"1s and 0s\" in a computer, but what does that mean? Find out how computers represent numbers, words, images, and sound.",
      "publisher": "code.org",
      "date": "30/01/2018",
      "type": "YouTube",
      "youtube": {
        "id": "USCBCmwMCDA"
      },
      "identifier": "https://www.youtube.com/watch?v=USCBCmwMCDA",
      "language": ["en"],
      "rights": "Standard YouTube License",
      "terms": [ "Bit", "Binary", "Pixel", "RGB", "Waveform" ],
      "duration": 6,
      "concepts": [
        "Representing text, images and sound with zeroes and ones (bits).",
        "Bits are how computer input, store, process and output information"
      ]
    },
    "images-pixels-and-rgb" : {
      "title": "Images, Pixels and RGB",
      "type" : "YouTube",
      "youtube": {
        "id": "15aqFQQVBWU"
      },
      "identifier": "https://www.youtube.com/watch?v=15aqFQQVBWU",
      "duration": 6,
      "terms": ["Resolution", "Density", "RGB", "Pixel", "JPEG", "GIF", "PNG", "Bit", "Binary", "Byte", "Function"],
      "concepts": [ "With 8 bits we can store 256 numbers from 0 up to 255." ]
    },
    "digital-compression-explained-by-aloe-blacc" : {
      "title": "",
      "type" : "YouTube",
      "youtube": {
        "id" : "MijmeoH9LT4"
      },
      "terms": [ "Lossy", "Lossless", "Compression" ],
      "concepts": [ "compression", "algorithm" ]
    },
    "characters-symbols-and-the-unicode-miracle-computerphile":{
      "title": "Characters, Symbols and the Unicode Miracle - Computerphile",
      "type": "YouTube",
      "youtube": {
        "id": "MijmeoH9LT4"
      },
      "identifier": "https://www.youtube.com/watch?v=MijmeoH9LT4",
      "duration": 10,
      "terms": [ "ASCII", "Binary", "Hexadecimal", "Encoding" ],
      "concepts": [ 
        [ 
          "What is ASCII",
          "A way to represent characters of the english alphabet using binary digits" 
        ], 
        [
          "What is the standard text encoding for the Web",
          "UTF-8"
        ]
      ]
    },
    "tutorial-1-about-bits-bytes": {
      "title": "Tutorial 1 About Bits & Bytes",
      "type": "YouTube",
      "youtube": {
        "id": "H2kTzmJJ79E"
      },
      "identifier": "https://www.youtube.com/watch?v=H2kTzmJJ79E",
      "duration": 5,
      "terms": ["Kilobyte", "Kibibyte", "SI", "IEC" ],
      "concepts": [ "How storage space is calculated in computers" ]
    },
    "the-internet-encryption-public-keys" : {
      "title": "The Internet: Encryption & Public Keys",
      "type": "YouTube",
      "youtube": {
        "id": "ZghMPWGXexs"
      },
      "identifier": "https://www.youtube.com/watch?v=ZghMPWGXexs",
      "duration": 7,
      "captions": true,
      "terms": [ "Public Key", "Caesar Cipher"],
      "reviewers": [
        {
          "name": "Shariar Shakhawat",
          "github": "https://github.com/Sha-Shak"
        }
      ]
    },
    "why-do-computers-understand-only-0-1-logic" : {
      "title": "Why do computers understand only 0 & 1 logic?",
      "identifier": "https://www.quora.com/Why-do-computers-understand-only-0-1-logic/answers/92646682",
      "type" : "Quora"
    },
    "how-computers-calculate-the-alu-crash-course-computer-science-5": {
      "title": "How Computers Calculate - the ALU: Crash Course Computer Science #5",
      "type": "YouTube",
      "youtube": {
        "id": "1I5ZMmrOfnA",
        "playlist_id": "PL8dPuuaLjXtNlUrzyH5r6jN9ulIgZBpdo",
        "playlist_index": 7,
        "playlist_title": "Computer Science"
      },
      "terms": ["ALU", "Logic Gates", "Half Adder", "Full Adder", "Overflow", "XOR", "NOT", "AND", "Logic Unit"]
    },
    "representing-numbers-and-letters-with-binary-crash-course-computer-science-4": {
      "title": "Representing Numbers and Letters with Binary: Crash Course Computer Science #4",
      "type": "YouTube",
      "duration": 11,
      "identifier": "https://www.youtube.com/watch?v=1GSjbWt0c9M",
      "youtube": {
          "captions": [ "EN" ],
          "id": "1GSjbWt0c9M",
          "playlist_id": "PL8dPuuaLjXtNlUrzyH5r6jN9ulIgZBpdo",
          "playlist_index": 5
      },
      "level": "Beginner",
      "terms": [ "IEEE", "IEEE 754", "ASCII", "Interoperability" ],
      "concepts": [
        "How do computers deal with large numbers?",
        "How do computers deal with negative numbers?",
        "How do computers deal with floating point numbers?"
      ]
    },
    "how-shazam-i-ds-over-23-000-songs-each-minute-wsj-tech-behind": {
      "title": "How Shazam IDs Over 23,000 Songs Each Minute | WSJ Tech Behind",
      "type": "YouTube",
      "duration": 7,
      "youtube": {
        "id": "b6xeOLjeKs0"
      },
      "terms": [ "Audio Fingerprinting" ]
    },
    "how-spotify-s-ai-driven-recommendations-work-wsj-tech-behind": {
      "title": "How Spotifyâ€™s AI-Driven Recommendations Work | WSJ Tech Behind",
      "type": "YouTube",
      "duration": 7,
      "identifier": "https://www.youtube.com/watch?v=pGntmcy_HX8",
      "youtube": {
        "id": "pGntmcy_HX8"
      }
    },
    "why-tap-to-pay-is-safer-than-a-credit-card-swipe-wsj-tech-behind" : {
      "title": "Why Tap-to-Pay Is Safer Than a Credit Card Swipe | WSJ Tech Behind",
      "type": "YouTube",
      "identifier": "https://www.youtube.com/watch?v=S7dWigI7Soc",
      "youtube": {
        "id": "S7dWigI7Soc"
      },
      "terms": [ "RFID", "NFC" ]
    }
  },
  "creators": {

  }
}